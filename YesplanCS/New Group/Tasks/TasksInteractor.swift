//
//  TasksInteractor.swift
//  YesplanCS
//
//  Created by Techcc - FOH - Video on 24/03/18.
//  Copyright (c) 2018 Yesplan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TasksBusinessLogic
{
    func fetchTasks(request: Tasks.FetchTasks.Request)
    
    }

protocol TasksDataStore
{
    var tasks: [Task]? { get }
}

class TasksInteractor: TasksBusinessLogic, TasksDataStore
{
  var presenter: TasksPresentationLogic?
  var worker: TasksWorker?
  //var name: String = ""
    var tasks: [Task]?

  // MARK: Do something
  
    func fetchTasks(request: Tasks.FetchTasks.Request)
    {
        worker = TasksWorker()
        worker?.doLoadTasks() { (yesplanResult) -> Void in
            
//            switch yesplanResult {
//            case .event:
//                print("events")
//            case .status:
//                print("statuses")
////            case .tasks:
////                print("tasks")
//                
//            case .double(_):
//                print("double")
//            case .string(_):
//                print("string")
//            case .bool(_):
//                print("bool")
//            case .dictionary(_):
//                print("dictionary")
//            case .array(_):
//                print("array")
//            case .nil:
//                print("nil")
//                
//            
//            }
            
//            let response = Tasks.FetchTasks.Response(tasks: self.tasks!)
            //        print("response: ", response) // ok
//            self.presenter?.presentFetchedTasks(response: response)
        }
    }
}
